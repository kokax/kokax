
입력
let dir = "right";
let homeSize = prompt("달팽이의 집 크기를 입력해주세요.")
let arr = new Array();
let count = 0;
let x = 0;
let y = 0;

처리

 입력 homeSize 

 	1. 입력받은 사이즈의 배열을 생성한다.
for (let i = 0; i < homeSize ; i++) 
	arr [i] = new Array();

		A. 생성한 배열에 식별할 수 있는 특정 값을 입력한다.
	for (let j = 0 ; j < homeSize ; j++) 
		arr[i][j] = "A";

	2. count < homeSize * homeSize 만큼 반복한다.
		A. count ++ 카운트 변수읙 값을 1씩 더한다.
		B. if(dir == "right") 진행방향을 확인한다.
			1. arr[x][y+1] == "A" 배열의 다음칸에 임의의 특정 값이 설정되어있는지 확인한다.
			2. 참이라면 y++; y의 값에 1을 더한다.
			3. 거짓이라면 dir = "down" ++x; 변수의 방향값을 설정한다. x값에 1을 더한다.
		c. arr[x][y] = count; count의 값을 배열에 입력한다.

		B. if(dir == "down") 진행방향을 확인한다.
			1. if (x != homeSize -1)
				ㄱ. arr[x+1][y] == "A" 배열의 다음칸에 임의의 특정 값이 설정되어있는지 확인한다.
					a. 참이라면 x++; x의 값에 1을 더한다.
					b. 거짓이라면 dir = "left" --y; 변수의 방향값을 설정한다. x값에 1을 더한다.
				ㄴ.	arr[x][y] = count; 카운트 변수의 값을 배열에 입력한다.	
			2. arr[x][y] = count; 카운트 변수의 값을 배열에 입력한다.
		c. arr[x][y] = count; count의 값을 배열에 입력한다.
		
		B. if(dir == "left") 진행방향을 확인한다.
			1. arr[x][y-1] == "A" 배열의 다음칸에 임의의 특정 값이 설정되어있는지 확인한다.
			2. 참이라면 --y; y의 값에 1을 뺀다.
			3. 거짓이라면 dir = "up" --x; 변수의 방향값을 설정한다. x값에 1을 뺀다.
		c. arr[x][y] = count; count의 값을 배열에 입력한다.
	
		B. if(dir == "up") 진행방향을 확인한다.
			1. (x > 0)  x가 0보다 크다면 참이라한다.
				ㄱ . arr[x-1][y] == "A" 배열의 다음칸에 임의의 특정 값이 설정되어있는지 확인한다.
					a. 참이라면 --x; x의 값에 1을 뺀다.
					b. 거짓이라면 dir = "right" ++y; 변수의 방향값을 설정한다. y값에 1을 더한다.
				ㄴ . arr[x][y] = count; count의 값을 배열에 입력한다.
		
